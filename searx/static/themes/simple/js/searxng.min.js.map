{"version":3,"mappings":"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","names":["assertElement: AssertElement","element?: Element | null","method: string","url: string | URL","data?: BodyInit","type: string | K","target: string | Document | E","listener: (this: E, event: DocumentEventMap[K]) => void","options?: AddEventListenerOptions","event: Event","callback: () => void","options?: ReadyOptions","onlyImages: boolean","intersectionObserveOptions: IntersectionObserverInit","entries: IntersectionObserverEntry[]","baseKeyBinding: Record<string, KeyBinding>","keyBindingLayouts: Record<KeyBindingLayout, Record<string, KeyBinding>>","element?: Element","element?: HTMLElement","resultElement?: Element","which: string | HTMLElement","noScroll?: boolean","keepFocus?: boolean","next: HTMLElement | undefined","event: KeyboardEvent","css_selector: string","amount: number","position: number","nav: string","newTab: boolean","divElement: HTMLElement","keyBindings: typeof baseKeyBinding","categories: Record<string, KeyBinding[]>","engineDescriptions: Record<string, [string, string]> | null","enable: boolean","engineToggles: NodeListOf<HTMLInputElement>","window","document","imgSrc: string","onSuccess: () => void","resultElement: Element","qInput: HTMLInputElement","cs: HTMLElement","event: MouseEvent","query: string","res: Response","timeoutId: number"],"ignoreList":[5],"sources":["../../../../../client/simple/src/js/main/00_toolkit.ts","../../../../../client/simple/src/js/main/infinite_scroll.ts","../../../../../client/simple/src/js/main/keyboard.ts","../../../../../client/simple/src/js/main/mapresult.ts","../../../../../client/simple/src/js/main/preferences.ts","../../../../../client/simple/node_modules/swiped-events/src/swiped-events.js","../../../../../client/simple/src/js/main/results.ts","../../../../../client/simple/src/js/main/search.ts"],"sourcesContent":["import type { KeyBindingLayout } from \"./keyboard.ts\";\n\ntype Settings = {\n  theme_static_path?: string;\n  method?: string;\n  hotkeys?: KeyBindingLayout;\n  infinite_scroll?: boolean;\n  autocomplete?: boolean;\n  autocomplete_min?: number;\n  search_on_category_select?: boolean;\n  translations?: Record<string, string>;\n  [key: string]: unknown;\n};\n\ntype ReadyOptions = {\n  // all values must be truthy for the callback to be executed\n  on?: (boolean | undefined)[];\n};\n\nconst getEndpoint = (): string => {\n  const endpointClass = Array.from(document.body.classList).find((className) => className.endsWith(\"_endpoint\"));\n  return endpointClass?.split(\"_\")[0] ?? \"\";\n};\n\nconst getSettings = (): Settings => {\n  const settings = document.querySelector(\"script[client_settings]\")?.getAttribute(\"client_settings\");\n  if (!settings) return {};\n\n  try {\n    return JSON.parse(atob(settings));\n  } catch (error) {\n    console.error(\"Failed to load client_settings:\", error);\n    return {};\n  }\n};\n\ntype AssertElement = (element?: Element | null) => asserts element is Element;\nexport const assertElement: AssertElement = (element?: Element | null): asserts element is Element => {\n  if (!element) {\n    throw new Error(\"Bad assertion: DOM element not found\");\n  }\n};\n\nexport const searxng = {\n  // dynamic functions\n  closeDetail: undefined as (() => void) | undefined,\n  scrollPageToSelected: undefined as (() => void) | undefined,\n  selectImage: undefined as ((resultElement: Element) => void) | undefined,\n  selectNext: undefined as ((openDetailView?: boolean) => void) | undefined,\n  selectPrevious: undefined as ((openDetailView?: boolean) => void) | undefined,\n\n  endpoint: getEndpoint(),\n\n  http: async (method: string, url: string | URL, data?: BodyInit): Promise<Response> => {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 30000);\n\n    const res = await fetch(url, {\n      body: data,\n      method,\n      signal: controller.signal\n    }).finally(() => clearTimeout(timeoutId));\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n\n    return res;\n  },\n\n  listen: <K extends keyof DocumentEventMap, E extends Element>(\n    type: string | K,\n    target: string | Document | E,\n    listener: (this: E, event: DocumentEventMap[K]) => void,\n    options?: AddEventListenerOptions\n  ): void => {\n    if (typeof target !== \"string\") {\n      target.addEventListener(type, listener as EventListener, options);\n      return;\n    }\n\n    document.addEventListener(\n      type,\n      (event: Event) => {\n        for (const node of event.composedPath()) {\n          if (node instanceof Element && node.matches(target)) {\n            try {\n              listener.call(node as E, event as DocumentEventMap[K]);\n            } catch (error) {\n              console.error(error);\n            }\n            break;\n          }\n        }\n      },\n      options\n    );\n  },\n\n  ready: (callback: () => void, options?: ReadyOptions): void => {\n    for (const condition of options?.on ?? []) {\n      if (!condition) {\n        return;\n      }\n    }\n\n    if (document.readyState !== \"loading\") {\n      callback();\n    } else {\n      searxng.listen(\"DOMContentLoaded\", document, callback, { once: true });\n    }\n  },\n\n  settings: getSettings()\n};\n\nsearxng.listen(\"click\", \".close\", function (this: Element) {\n  (this.parentNode as Element)?.classList.add(\"invisible\");\n});\n","import { assertElement, searxng } from \"./00_toolkit\";\n\nconst newLoadSpinner = (): HTMLDivElement => {\n  return Object.assign(document.createElement(\"div\"), {\n    className: \"loader\"\n  });\n};\n\nconst loadNextPage = async (onlyImages: boolean, callback: () => void): Promise<void> => {\n  const searchForm = document.querySelector<HTMLFormElement>(\"#search\");\n  assertElement(searchForm);\n\n  const form = document.querySelector<HTMLFormElement>(\"#pagination form.next_page\");\n  assertElement(form);\n\n  const formData = new FormData(form);\n\n  const action = searchForm.getAttribute(\"action\");\n  if (!action) {\n    console.error(\"Form action not found\");\n    return;\n  }\n\n  const paginationElement = document.querySelector<HTMLElement>(\"#pagination\");\n  assertElement(paginationElement);\n\n  paginationElement.replaceChildren(newLoadSpinner());\n\n  try {\n    const res = await searxng.http(\"POST\", action, formData);\n    const nextPage = await res.text();\n    if (!nextPage) return;\n\n    const nextPageDoc = new DOMParser().parseFromString(nextPage, \"text/html\");\n    const articleList = nextPageDoc.querySelectorAll<HTMLElement>(\"#urls article\");\n    const nextPaginationElement = nextPageDoc.querySelector<HTMLElement>(\"#pagination\");\n\n    document.querySelector(\"#pagination\")?.remove();\n\n    const urlsElement = document.querySelector<HTMLElement>(\"#urls\");\n    if (!urlsElement) {\n      console.error(\"URLs element not found\");\n      return;\n    }\n\n    if (articleList.length > 0 && !onlyImages) {\n      // do not add <hr> element when there are only images\n      urlsElement.appendChild(document.createElement(\"hr\"));\n    }\n\n    urlsElement.append(...Array.from(articleList));\n\n    if (nextPaginationElement) {\n      const results = document.querySelector<HTMLElement>(\"#results\");\n      results?.appendChild(nextPaginationElement);\n      callback();\n    }\n  } catch (error) {\n    console.error(\"Error loading next page:\", error);\n\n    const errorElement = Object.assign(document.createElement(\"div\"), {\n      textContent: searxng.settings.translations?.error_loading_next_page ?? \"Error loading next page\",\n      className: \"dialog-error\"\n    });\n    errorElement.setAttribute(\"role\", \"alert\");\n    document.querySelector(\"#pagination\")?.replaceChildren(errorElement);\n  }\n};\n\nsearxng.ready(\n  () => {\n    const resultsElement = document.getElementById(\"results\");\n    if (!resultsElement) {\n      console.error(\"Results element not found\");\n      return;\n    }\n\n    const onlyImages = resultsElement.classList.contains(\"only_template_images\");\n    const observedSelector = \"article.result:last-child\";\n\n    const intersectionObserveOptions: IntersectionObserverInit = {\n      rootMargin: \"320px\"\n    };\n\n    const observer = new IntersectionObserver(async (entries: IntersectionObserverEntry[]) => {\n      const [paginationEntry] = entries;\n\n      if (paginationEntry?.isIntersecting) {\n        observer.unobserve(paginationEntry.target);\n\n        await loadNextPage(onlyImages, () => {\n          const nextObservedElement = document.querySelector<HTMLElement>(observedSelector);\n          if (nextObservedElement) {\n            observer.observe(nextObservedElement);\n          }\n        });\n      }\n    }, intersectionObserveOptions);\n\n    const initialObservedElement = document.querySelector<HTMLElement>(observedSelector);\n    if (initialObservedElement) {\n      observer.observe(initialObservedElement);\n    }\n  },\n  {\n    on: [searxng.endpoint === \"results\", searxng.settings.infinite_scroll]\n  }\n);\n","import { assertElement, searxng } from \"./00_toolkit.ts\";\n\nexport type KeyBindingLayout = \"default\" | \"vim\";\n\ntype KeyBinding = {\n  key: string;\n  fun: (event: KeyboardEvent) => void;\n  des: string;\n  cat: string;\n};\n\n/* common base for layouts */\nconst baseKeyBinding: Record<string, KeyBinding> = {\n  Escape: {\n    key: \"ESC\",\n    fun: (event) => removeFocus(event),\n    des: \"remove focus from the focused input\",\n    cat: \"Control\"\n  },\n  c: {\n    key: \"c\",\n    fun: () => copyURLToClipboard(),\n    des: \"copy url of the selected result to the clipboard\",\n    cat: \"Results\"\n  },\n  h: {\n    key: \"h\",\n    fun: () => toggleHelp(keyBindings),\n    des: \"toggle help window\",\n    cat: \"Other\"\n  },\n  i: {\n    key: \"i\",\n    fun: () => searchInputFocus(),\n    des: \"focus on the search input\",\n    cat: \"Control\"\n  },\n  n: {\n    key: \"n\",\n    fun: () => GoToNextPage(),\n    des: \"go to next page\",\n    cat: \"Results\"\n  },\n  o: {\n    key: \"o\",\n    fun: () => openResult(false),\n    des: \"open search result\",\n    cat: \"Results\"\n  },\n  p: {\n    key: \"p\",\n    fun: () => GoToPreviousPage(),\n    des: \"go to previous page\",\n    cat: \"Results\"\n  },\n  r: {\n    key: \"r\",\n    fun: () => reloadPage(),\n    des: \"reload page from the server\",\n    cat: \"Control\"\n  },\n  t: {\n    key: \"t\",\n    fun: () => openResult(true),\n    des: \"open the result in a new tab\",\n    cat: \"Results\"\n  }\n};\n\nconst keyBindingLayouts: Record<KeyBindingLayout, Record<string, KeyBinding>> = {\n  // SearXNG layout\n  default: {\n    ArrowLeft: {\n      key: \"←\",\n      fun: () => highlightResult(\"up\")(),\n      des: \"select previous search result\",\n      cat: \"Results\"\n    },\n    ArrowRight: {\n      key: \"→\",\n      fun: () => highlightResult(\"down\")(),\n      des: \"select next search result\",\n      cat: \"Results\"\n    },\n    ...baseKeyBinding\n  },\n\n  // Vim-like keyboard layout\n  vim: {\n    b: {\n      key: \"b\",\n      fun: () => scrollPage(-window.innerHeight),\n      des: \"scroll one page up\",\n      cat: \"Navigation\"\n    },\n    d: {\n      key: \"d\",\n      fun: () => scrollPage(window.innerHeight / 2),\n      des: \"scroll half a page down\",\n      cat: \"Navigation\"\n    },\n    f: {\n      key: \"f\",\n      fun: () => scrollPage(window.innerHeight),\n      des: \"scroll one page down\",\n      cat: \"Navigation\"\n    },\n    g: {\n      key: \"g\",\n      fun: () => scrollPageTo(-document.body.scrollHeight, \"top\"),\n      des: \"scroll to the top of the page\",\n      cat: \"Navigation\"\n    },\n    j: {\n      key: \"j\",\n      fun: () => highlightResult(\"down\")(),\n      des: \"select next search result\",\n      cat: \"Results\"\n    },\n    k: {\n      key: \"k\",\n      fun: () => highlightResult(\"up\")(),\n      des: \"select previous search result\",\n      cat: \"Results\"\n    },\n    u: {\n      key: \"u\",\n      fun: () => scrollPage(-window.innerHeight / 2),\n      des: \"scroll half a page up\",\n      cat: \"Navigation\"\n    },\n    v: {\n      key: \"v\",\n      fun: () => scrollPageTo(document.body.scrollHeight, \"bottom\"),\n      des: \"scroll to the bottom of the page\",\n      cat: \"Navigation\"\n    },\n    y: {\n      key: \"y\",\n      fun: () => copyURLToClipboard(),\n      des: \"copy url of the selected result to the clipboard\",\n      cat: \"Results\"\n    },\n    ...baseKeyBinding\n  }\n};\n\nconst keyBindings =\n  searxng.settings.hotkeys && searxng.settings.hotkeys in keyBindingLayouts\n    ? keyBindingLayouts[searxng.settings.hotkeys]\n    : keyBindingLayouts.default;\n\nconst isElementInDetail = (element?: Element): boolean => {\n  const ancestor = element?.closest(\".detail, .result\");\n  return ancestor?.classList.contains(\"detail\") ?? false;\n};\n\nconst getResultElement = (element?: HTMLElement): HTMLElement | undefined => {\n  return element?.closest(\".result\") ?? undefined;\n};\n\nconst isImageResult = (resultElement?: Element): boolean => {\n  return resultElement?.classList.contains(\"result-images\") ?? false;\n};\n\nconst highlightResult =\n  (which: string | HTMLElement) =>\n  (noScroll?: boolean, keepFocus?: boolean): void => {\n    let effectiveWhich = which;\n    let current = document.querySelector<HTMLElement>(\".result[data-vim-selected]\");\n    if (!current) {\n      // no selection : choose the first one\n      current = document.querySelector<HTMLElement>(\".result\");\n      if (!current) {\n        // no first one : there are no results\n        return;\n      }\n      // replace up/down actions by selecting first one\n      if (which === \"down\" || which === \"up\") {\n        effectiveWhich = current;\n      }\n    }\n\n    const results = Array.from(document.querySelectorAll<HTMLElement>(\".result\"));\n\n    let next: HTMLElement | undefined;\n\n    if (typeof effectiveWhich !== \"string\") {\n      next = effectiveWhich;\n    } else {\n      switch (effectiveWhich) {\n        case \"visible\": {\n          const top = document.documentElement.scrollTop || document.body.scrollTop;\n          const bot = top + document.documentElement.clientHeight;\n\n          for (const element of results) {\n            const etop = element.offsetTop;\n            const ebot = etop + element.clientHeight;\n            if (ebot <= bot && etop > top) {\n              next = element;\n              break;\n            }\n          }\n          break;\n        }\n        case \"down\":\n          next = results[results.indexOf(current) + 1] || current;\n          break;\n        case \"up\":\n          next = results[results.indexOf(current) - 1] || current;\n          break;\n        case \"bottom\":\n          next = results[results.length - 1];\n          break;\n        // biome-ignore lint/complexity/noUselessSwitchCase: fallthrough is intended\n        case \"top\":\n        default:\n          next = results[0];\n      }\n    }\n\n    if (next) {\n      current.removeAttribute(\"data-vim-selected\");\n      next.setAttribute(\"data-vim-selected\", \"true\");\n\n      if (!keepFocus) {\n        const link = next.querySelector<HTMLAnchorElement>(\"h3 a\") || next.querySelector<HTMLAnchorElement>(\"a\");\n        link?.focus();\n      }\n\n      if (!noScroll) {\n        scrollPageToSelected();\n      }\n    }\n  };\n\nconst reloadPage = (): void => {\n  document.location.reload();\n};\n\nconst removeFocus = (event: KeyboardEvent): void => {\n  const target = event.target as HTMLElement;\n  const tagName = target?.tagName?.toLowerCase();\n\n  if (document.activeElement && (tagName === \"input\" || tagName === \"select\" || tagName === \"textarea\")) {\n    (document.activeElement as HTMLElement).blur();\n  } else {\n    searxng.closeDetail?.();\n  }\n};\n\nconst pageButtonClick = (css_selector: string): void => {\n  const button = document.querySelector<HTMLButtonElement>(css_selector);\n  if (button) {\n    button.click();\n  }\n};\n\nconst GoToNextPage = () => {\n  pageButtonClick('nav#pagination .next_page button[type=\"submit\"]');\n};\n\nconst GoToPreviousPage = () => {\n  pageButtonClick('nav#pagination .previous_page button[type=\"submit\"]');\n};\n\nconst scrollPageToSelected = (): void => {\n  const sel = document.querySelector<HTMLElement>(\".result[data-vim-selected]\");\n  if (!sel) return;\n\n  const wtop = document.documentElement.scrollTop || document.body.scrollTop,\n    height = document.documentElement.clientHeight,\n    etop = sel.offsetTop,\n    ebot = etop + sel.clientHeight,\n    offset = 120;\n\n  // first element ?\n  if (!sel.previousElementSibling && ebot < height) {\n    // set to the top of page if the first element\n    // is fully included in the viewport\n    window.scroll(window.scrollX, 0);\n    return;\n  }\n\n  if (wtop > etop - offset) {\n    window.scroll(window.scrollX, etop - offset);\n  } else {\n    const wbot = wtop + height;\n    if (wbot < ebot + offset) {\n      window.scroll(window.scrollX, ebot - height + offset);\n    }\n  }\n};\n\nconst scrollPage = (amount: number): void => {\n  window.scrollBy(0, amount);\n  highlightResult(\"visible\")();\n};\n\nconst scrollPageTo = (position: number, nav: string): void => {\n  window.scrollTo(0, position);\n  highlightResult(nav)();\n};\n\nconst searchInputFocus = (): void => {\n  window.scrollTo(0, 0);\n\n  const q = document.querySelector<HTMLInputElement>(\"#q\");\n  if (q) {\n    q.focus();\n\n    if (q.setSelectionRange) {\n      const len = q.value.length;\n\n      q.setSelectionRange(len, len);\n    }\n  }\n};\n\nconst openResult = (newTab: boolean): void => {\n  let link = document.querySelector<HTMLAnchorElement>(\".result[data-vim-selected] h3 a\");\n  if (!link) {\n    link = document.querySelector<HTMLAnchorElement>(\".result[data-vim-selected] > a\");\n  }\n  if (!link) return;\n\n  const url = link.getAttribute(\"href\");\n  if (url) {\n    if (newTab) {\n      window.open(url);\n    } else {\n      window.location.href = url;\n    }\n  }\n};\n\nconst initHelpContent = (divElement: HTMLElement, keyBindings: typeof baseKeyBinding): void => {\n  const categories: Record<string, KeyBinding[]> = {};\n\n  for (const binding of Object.values(keyBindings)) {\n    const cat = binding.cat;\n    categories[cat] ??= [];\n    categories[cat].push(binding);\n  }\n\n  const sortedCategoryKeys = Object.keys(categories).sort(\n    (a, b) => (categories[b]?.length ?? 0) - (categories[a]?.length ?? 0)\n  );\n\n  let html = '<a href=\"#\" class=\"close\" aria-label=\"close\" title=\"close\">×</a>';\n  html += \"<h3>How to navigate SearXNG with hotkeys</h3>\";\n  html += \"<table>\";\n\n  for (const [i, categoryKey] of sortedCategoryKeys.entries()) {\n    const bindings = categories[categoryKey];\n    if (!bindings || bindings.length === 0) continue;\n\n    const isFirst = i % 2 === 0;\n    const isLast = i === sortedCategoryKeys.length - 1;\n\n    if (isFirst) {\n      html += \"<tr>\";\n    }\n\n    html += \"<td>\";\n    html += `<h4>${categoryKey}</h4>`;\n    html += '<ul class=\"list-unstyled\">';\n\n    for (const binding of bindings) {\n      html += `<li><kbd>${binding.key}</kbd> ${binding.des}</li>`;\n    }\n\n    html += \"</ul>\";\n    html += \"</td>\";\n\n    if (!isFirst || isLast) {\n      html += \"</tr>\";\n    }\n  }\n\n  html += \"</table>\";\n\n  divElement.innerHTML = html;\n};\n\nconst toggleHelp = (keyBindings: typeof baseKeyBinding): void => {\n  let helpPanel = document.querySelector<HTMLElement>(\"#vim-hotkeys-help\");\n  if (!helpPanel) {\n    // first call\n    helpPanel = Object.assign(document.createElement(\"div\"), {\n      id: \"vim-hotkeys-help\",\n      className: \"dialog-modal\"\n    });\n    initHelpContent(helpPanel, keyBindings);\n    const body = document.getElementsByTagName(\"body\")[0];\n    if (body) {\n      body.appendChild(helpPanel);\n    }\n  } else {\n    // toggle hidden\n    helpPanel.classList.toggle(\"invisible\");\n  }\n};\n\nconst copyURLToClipboard = async (): Promise<void> => {\n  const currentUrlElement = document.querySelector<HTMLAnchorElement>(\".result[data-vim-selected] h3 a\");\n  assertElement(currentUrlElement);\n\n  const url = currentUrlElement.getAttribute(\"href\");\n  if (url) {\n    await navigator.clipboard.writeText(url);\n  }\n};\n\nsearxng.ready(() => {\n  searxng.listen(\"click\", \".result\", function (this: HTMLElement, event: Event) {\n    if (!isElementInDetail(event.target as HTMLElement)) {\n      highlightResult(this)(true, true);\n\n      const resultElement = getResultElement(event.target as HTMLElement);\n\n      if (resultElement && isImageResult(resultElement)) {\n        event.preventDefault();\n        searxng.selectImage?.(resultElement);\n      }\n    }\n  });\n\n  searxng.listen(\n    \"focus\",\n    \".result a\",\n    (event: Event) => {\n      if (!isElementInDetail(event.target as HTMLElement)) {\n        const resultElement = getResultElement(event.target as HTMLElement);\n\n        if (resultElement && !resultElement.getAttribute(\"data-vim-selected\")) {\n          highlightResult(resultElement)(true);\n        }\n\n        if (resultElement && isImageResult(resultElement)) {\n          searxng.selectImage?.(resultElement);\n        }\n      }\n    },\n    { capture: true }\n  );\n\n  searxng.listen(\"keydown\", document, (event: KeyboardEvent) => {\n    // check for modifiers so we don't break browser's hotkeys\n    if (Object.hasOwn(keyBindings, event.key) && !event.ctrlKey && !event.altKey && !event.shiftKey && !event.metaKey) {\n      const tagName = (event.target as Element)?.tagName?.toLowerCase();\n\n      if (event.key === \"Escape\") {\n        keyBindings[event.key]?.fun(event);\n      } else {\n        if (event.target === document.body || tagName === \"a\" || tagName === \"button\") {\n          event.preventDefault();\n          keyBindings[event.key]?.fun(event);\n        }\n      }\n    }\n  });\n\n  searxng.scrollPageToSelected = scrollPageToSelected;\n  searxng.selectNext = highlightResult(\"down\");\n  searxng.selectPrevious = highlightResult(\"up\");\n});\n","import { searxng } from \"./00_toolkit.ts\";\n\nsearxng.ready(\n  () => {\n    searxng.listen(\"click\", \".searxng_init_map\", async function (this: HTMLElement, event: Event) {\n      event.preventDefault();\n      this.classList.remove(\"searxng_init_map\");\n\n      const {\n        View,\n        OlMap,\n        TileLayer,\n        VectorLayer,\n        OSM,\n        VectorSource,\n        Style,\n        Stroke,\n        Fill,\n        Circle,\n        fromLonLat,\n        GeoJSON,\n        Feature,\n        Point\n      } = await import(\"../pkg/ol.ts\");\n      import(\"ol/ol.css\");\n\n      const { leafletTarget: target, mapLon, mapLat, mapGeojson } = this.dataset;\n\n      const lon = parseFloat(mapLon || \"0\");\n      const lat = parseFloat(mapLat || \"0\");\n      const view = new View({ maxZoom: 16, enableRotation: false });\n      const map = new OlMap({\n        target,\n        layers: [new TileLayer({ source: new OSM({ maxZoom: 16 }) })],\n        view\n      });\n\n      try {\n        const markerSource = new VectorSource({\n          features: [\n            new Feature({\n              geometry: new Point(fromLonLat([lon, lat]))\n            })\n          ]\n        });\n\n        const markerLayer = new VectorLayer({\n          source: markerSource,\n          style: new Style({\n            image: new Circle({\n              radius: 6,\n              fill: new Fill({ color: \"#3050ff\" })\n            })\n          })\n        });\n\n        map.addLayer(markerLayer);\n      } catch (error) {\n        console.error(\"Failed to create marker layer:\", error);\n      }\n\n      if (mapGeojson) {\n        try {\n          const geoSource = new VectorSource({\n            features: new GeoJSON().readFeatures(JSON.parse(mapGeojson), {\n              dataProjection: \"EPSG:4326\",\n              featureProjection: \"EPSG:3857\"\n            })\n          });\n\n          const geoLayer = new VectorLayer({\n            source: geoSource,\n            style: new Style({\n              stroke: new Stroke({ color: \"#3050ff\", width: 2 }),\n              fill: new Fill({ color: \"#3050ff33\" })\n            })\n          });\n\n          map.addLayer(geoLayer);\n\n          view.fit(geoSource.getExtent(), { padding: [20, 20, 20, 20] });\n        } catch (error) {\n          console.error(\"Failed to create GeoJSON layer:\", error);\n        }\n      }\n    });\n  },\n  { on: [searxng.endpoint === \"results\"] }\n);\n","import { searxng } from \"./00_toolkit.ts\";\n\nconst loadEngineDescriptions = async (): Promise<void> => {\n  let engineDescriptions: Record<string, [string, string]> | null = null;\n  try {\n    const res = await searxng.http(\"GET\", \"engine_descriptions.json\");\n    engineDescriptions = await res.json();\n  } catch (error) {\n    console.error(\"Error fetching engineDescriptions:\", error);\n  }\n  if (!engineDescriptions) return;\n\n  for (const [engine_name, [description, source]] of Object.entries(engineDescriptions)) {\n    const elements = document.querySelectorAll<HTMLElement>(`[data-engine-name=\"${engine_name}\"] .engine-description`);\n    const sourceText = ` (<i>${searxng.settings.translations?.Source}:&nbsp;${source}</i>)`;\n\n    for (const element of elements) {\n      element.innerHTML = description + sourceText;\n    }\n  }\n};\n\nconst toggleEngines = (enable: boolean, engineToggles: NodeListOf<HTMLInputElement>): void => {\n  for (const engineToggle of engineToggles) {\n    // check if element visible, so that only engines of the current category are modified\n    if (engineToggle.offsetParent) {\n      engineToggle.checked = !enable;\n    }\n  }\n};\n\nsearxng.ready(\n  () => {\n    const engineElements = document.querySelectorAll<HTMLElement>(\"[data-engine-name]\");\n    for (const engineElement of engineElements) {\n      searxng.listen(\"mouseenter\", engineElement, loadEngineDescriptions);\n    }\n\n    const engineToggles = document.querySelectorAll<HTMLInputElement>(\n      \"tbody input[type=checkbox][class~=checkbox-onoff]\"\n    );\n\n    const enableAllEngines = document.querySelectorAll<HTMLElement>(\".enable-all-engines\");\n    for (const engine of enableAllEngines) {\n      searxng.listen(\"click\", engine, () => toggleEngines(true, engineToggles));\n    }\n\n    const disableAllEngines = document.querySelectorAll<HTMLElement>(\".disable-all-engines\");\n    for (const engine of disableAllEngines) {\n      searxng.listen(\"click\", engine, () => toggleEngines(false, engineToggles));\n    }\n\n    const copyHashButton = document.querySelector<HTMLElement>(\"#copy-hash\");\n    if (copyHashButton) {\n      searxng.listen(\"click\", copyHashButton, async (event: Event) => {\n        event.preventDefault();\n\n        const { copiedText, hash } = copyHashButton.dataset;\n        if (!copiedText || !hash) return;\n\n        try {\n          await navigator.clipboard.writeText(hash);\n          copyHashButton.innerText = copiedText;\n        } catch (error) {\n          console.error(\"Failed to copy hash:\", error);\n        }\n      });\n    }\n  },\n  { on: [searxng.endpoint === \"preferences\"] }\n);\n","/*!\n * swiped-events.js - v@version@\n * Pure JavaScript swipe events\n * https://github.com/john-doherty/swiped-events\n * @inspiration https://stackoverflow.com/questions/16348031/disable-scrolling-when-touch-moving-certain-element\n * @author John Doherty <www.johndoherty.info>\n * @license MIT\n */\n(function (window, document) {\n\n    'use strict';\n\n    // patch CustomEvent to allow constructor creation (IE/Chrome)\n    if (typeof window.CustomEvent !== 'function') {\n\n        window.CustomEvent = function (event, params) {\n\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n\n    document.addEventListener('touchstart', handleTouchStart, false);\n    document.addEventListener('touchmove', handleTouchMove, false);\n    document.addEventListener('touchend', handleTouchEnd, false);\n\n    var xDown = null;\n    var yDown = null;\n    var xDiff = null;\n    var yDiff = null;\n    var timeDown = null;\n    var startEl = null;\n    var touchCount = 0;\n\n    /**\n     * Fires swiped event if swipe detected on touchend\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchEnd(e) {\n\n        // if the user released on a different target, cancel!\n        if (startEl !== e.target) return;\n\n        var swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', '20'), 10); // default 20 units\n        var swipeUnit = getNearestAttribute(startEl, 'data-swipe-unit', 'px'); // default px\n        var swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', '500'), 10);    // default 500ms\n        var timeDiff = Date.now() - timeDown;\n        var eventType = '';\n        var changedTouches = e.changedTouches || e.touches || [];\n\n        if (swipeUnit === 'vh') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientHeight); // get percentage of viewport height in pixels\n        }\n        if (swipeUnit === 'vw') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientWidth); // get percentage of viewport height in pixels\n        }\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\n            if (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n                if (xDiff > 0) {\n                    eventType = 'swiped-left';\n                }\n                else {\n                    eventType = 'swiped-right';\n                }\n            }\n        }\n        else if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n            if (yDiff > 0) {\n                eventType = 'swiped-up';\n            }\n            else {\n                eventType = 'swiped-down';\n            }\n        }\n\n        if (eventType !== '') {\n\n            var eventData = {\n                dir: eventType.replace(/swiped-/, ''),\n                touchType: (changedTouches[0] || {}).touchType || 'direct',\n                fingers: touchCount, // Number of fingers used\n                xStart: parseInt(xDown, 10),\n                xEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\n                yStart: parseInt(yDown, 10),\n                yEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\n            };\n\n            // fire `swiped` event event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\n\n            // fire `swiped-dir` event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\n        }\n\n        // reset values\n        xDown = null;\n        yDown = null;\n        timeDown = null;\n    }\n    /**\n     * Records current location on touchstart event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchStart(e) {\n\n        // if the element has data-swipe-ignore=\"true\" we stop listening for swipe events\n        if (e.target.getAttribute('data-swipe-ignore') === 'true') return;\n\n        startEl = e.target;\n\n        timeDown = Date.now();\n        xDown = e.touches[0].clientX;\n        yDown = e.touches[0].clientY;\n        xDiff = 0;\n        yDiff = 0;\n        touchCount = e.touches.length;\n    }\n\n    /**\n     * Records location diff in px on touchmove event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchMove(e) {\n\n        if (!xDown || !yDown) return;\n\n        var xUp = e.touches[0].clientX;\n        var yUp = e.touches[0].clientY;\n\n        xDiff = xDown - xUp;\n        yDiff = yDown - yUp;\n    }\n\n    /**\n     * Gets attribute off HTML element or nearest parent\n     * @param {object} el - HTML element to retrieve attribute from\n     * @param {string} attributeName - name of the attribute\n     * @param {any} defaultValue - default value to return if no match found\n     * @returns {any} attribute value or defaultValue\n     */\n    function getNearestAttribute(el, attributeName, defaultValue) {\n\n        // walk up the dom tree looking for attributeName\n        while (el && el !== document.documentElement) {\n\n            var attributeValue = el.getAttribute(attributeName);\n\n            if (attributeValue) {\n                return attributeValue;\n            }\n\n            el = el.parentNode;\n        }\n\n        return defaultValue;\n    }\n\n}(window, document));\n","import \"../../../node_modules/swiped-events/src/swiped-events.js\";\nimport { assertElement, searxng } from \"./00_toolkit.ts\";\n\nconst loadImage = (imgSrc: string, onSuccess: () => void): void => {\n  // singleton image object, which is used for all loading processes of a detailed image\n  const imgLoader = new Image();\n\n  // set handlers in the on-properties\n  imgLoader.onload = () => {\n    onSuccess();\n  };\n\n  imgLoader.src = imgSrc;\n};\n\nsearxng.ready(\n  () => {\n    const imageThumbnails = document.querySelectorAll<HTMLImageElement>(\"#urls img.image_thumbnail\");\n    for (const thumbnail of imageThumbnails) {\n      if (thumbnail.complete && thumbnail.naturalWidth === 0) {\n        thumbnail.src = `${searxng.settings.theme_static_path}/img/img_load_error.svg`;\n      }\n\n      thumbnail.onerror = () => {\n        thumbnail.src = `${searxng.settings.theme_static_path}/img/img_load_error.svg`;\n      };\n    }\n\n    const copyUrlButton = document.querySelector<HTMLButtonElement>(\"#search_url button#copy_url\");\n    copyUrlButton?.style.setProperty(\"display\", \"block\");\n\n    searxng.listen(\"click\", \".btn-collapse\", function (this: HTMLElement) {\n      const btnLabelCollapsed = this.getAttribute(\"data-btn-text-collapsed\");\n      const btnLabelNotCollapsed = this.getAttribute(\"data-btn-text-not-collapsed\");\n      const target = this.getAttribute(\"data-target\");\n\n      if (!target || !btnLabelCollapsed || !btnLabelNotCollapsed) return;\n\n      const targetElement = document.querySelector<HTMLElement>(target);\n      assertElement(targetElement);\n\n      const isCollapsed = this.classList.contains(\"collapsed\");\n      const newLabel = isCollapsed ? btnLabelNotCollapsed : btnLabelCollapsed;\n      const oldLabel = isCollapsed ? btnLabelCollapsed : btnLabelNotCollapsed;\n\n      this.innerHTML = this.innerHTML.replace(oldLabel, newLabel);\n      this.classList.toggle(\"collapsed\");\n\n      targetElement.classList.toggle(\"invisible\");\n    });\n\n    searxng.listen(\"click\", \".media-loader\", function (this: HTMLElement) {\n      const target = this.getAttribute(\"data-target\");\n      if (!target) return;\n\n      const iframeLoad = document.querySelector<HTMLIFrameElement>(`${target} > iframe`);\n      assertElement(iframeLoad);\n\n      const srctest = iframeLoad.getAttribute(\"src\");\n      if (!srctest) {\n        const dataSrc = iframeLoad.getAttribute(\"data-src\");\n        if (dataSrc) {\n          iframeLoad.setAttribute(\"src\", dataSrc);\n        }\n      }\n    });\n\n    searxng.listen(\"click\", \"#copy_url\", async function (this: HTMLElement) {\n      const target = this.parentElement?.querySelector<HTMLPreElement>(\"pre\");\n      assertElement(target);\n\n      await navigator.clipboard.writeText(target.innerText);\n      const copiedText = this.dataset.copiedText;\n      if (copiedText) {\n        this.innerText = copiedText;\n      }\n    });\n\n    searxng.selectImage = (resultElement: Element): void => {\n      // add a class that can be evaluated in the CSS and indicates that the\n      // detail view is open\n      const resultsElement = document.getElementById(\"results\");\n      resultsElement?.classList.add(\"image-detail-open\");\n\n      // add a hash to the browser history so that pressing back doesn't return\n      // to the previous page this allows us to dismiss the image details on\n      // pressing the back button on mobile devices\n      window.location.hash = \"#image-viewer\";\n\n      searxng.scrollPageToSelected?.();\n\n      // if there is no element given by the caller, stop here\n      if (!resultElement) return;\n\n      // find image element, if there is none, stop here\n      const img = resultElement.querySelector<HTMLImageElement>(\".result-images-source img\");\n      if (!img) return;\n\n      // <img src=\"\" data-src=\"http://example.org/image.jpg\">\n      const src = img.getAttribute(\"data-src\");\n      if (!src) return;\n\n      // use thumbnail until full image loads\n      const thumbnail = resultElement.querySelector<HTMLImageElement>(\".image_thumbnail\");\n      if (thumbnail) {\n        img.src = thumbnail.src;\n      }\n\n      // load full size image\n      loadImage(src, () => {\n        img.src = src;\n        img.onerror = () => {\n          img.src = `${searxng.settings.theme_static_path}/img/img_load_error.svg`;\n        };\n\n        img.removeAttribute(\"data-src\");\n      });\n    };\n\n    searxng.closeDetail = (): void => {\n      const resultsElement = document.getElementById(\"results\");\n      resultsElement?.classList.remove(\"image-detail-open\");\n\n      // remove #image-viewer hash from url by navigating back\n      if (window.location.hash === \"#image-viewer\") {\n        window.history.back();\n      }\n\n      searxng.scrollPageToSelected?.();\n    };\n\n    searxng.listen(\"click\", \".result-detail-close\", (event: Event) => {\n      event.preventDefault();\n      searxng.closeDetail?.();\n    });\n\n    searxng.listen(\"click\", \".result-detail-previous\", (event: Event) => {\n      event.preventDefault();\n      searxng.selectPrevious?.(false);\n    });\n\n    searxng.listen(\"click\", \".result-detail-next\", (event: Event) => {\n      event.preventDefault();\n      searxng.selectNext?.(false);\n    });\n\n    // listen for the back button to be pressed and dismiss the image details when called\n    window.addEventListener(\"hashchange\", () => {\n      if (window.location.hash !== \"#image-viewer\") {\n        searxng.closeDetail?.();\n      }\n    });\n\n    const swipeHorizontal = document.querySelectorAll<HTMLElement>(\".swipe-horizontal\");\n    for (const element of swipeHorizontal) {\n      searxng.listen(\"swiped-left\", element, () => {\n        searxng.selectNext?.(false);\n      });\n\n      searxng.listen(\"swiped-right\", element, () => {\n        searxng.selectPrevious?.(false);\n      });\n    }\n\n    window.addEventListener(\n      \"scroll\",\n      () => {\n        const backToTopElement = document.getElementById(\"backToTop\");\n        const resultsElement = document.getElementById(\"results\");\n\n        if (backToTopElement && resultsElement) {\n          const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n          const isScrolling = scrollTop >= 100;\n          resultsElement.classList.toggle(\"scrolling\", isScrolling);\n        }\n      },\n      true\n    );\n  },\n  { on: [searxng.endpoint === \"results\"] }\n);\n","import { assertElement, searxng } from \"./00_toolkit.ts\";\n\nconst submitIfQuery = (qInput: HTMLInputElement): void => {\n  if (qInput.value.length > 0) {\n    const search = document.getElementById(\"search\") as HTMLFormElement | null;\n    search?.submit();\n  }\n};\n\nconst updateClearButton = (qInput: HTMLInputElement, cs: HTMLElement): void => {\n  cs.classList.toggle(\"empty\", qInput.value.length === 0);\n};\n\nconst createClearButton = (qInput: HTMLInputElement): void => {\n  const cs = document.getElementById(\"clear_search\");\n  assertElement(cs);\n\n  updateClearButton(qInput, cs);\n\n  searxng.listen(\"click\", cs, (event: MouseEvent) => {\n    event.preventDefault();\n    qInput.value = \"\";\n    qInput.focus();\n    updateClearButton(qInput, cs);\n  });\n\n  searxng.listen(\"input\", qInput, () => updateClearButton(qInput, cs), { passive: true });\n};\n\nconst fetchResults = async (qInput: HTMLInputElement, query: string): Promise<void> => {\n  try {\n    let res: Response;\n\n    if (searxng.settings.method === \"GET\") {\n      res = await searxng.http(\"GET\", `./autocompleter?q=${query}`);\n    } else {\n      res = await searxng.http(\"POST\", \"./autocompleter\", new URLSearchParams({ q: query }));\n    }\n\n    const results = await res.json();\n\n    const autocomplete = document.querySelector<HTMLElement>(\".autocomplete\");\n    assertElement(autocomplete);\n\n    const autocompleteList = document.querySelector<HTMLUListElement>(\".autocomplete ul\");\n    assertElement(autocompleteList);\n\n    autocomplete.classList.add(\"open\");\n    autocompleteList.replaceChildren();\n\n    // show an error message that no result was found\n    if (!results?.[1]?.length) {\n      const noItemFoundMessage = Object.assign(document.createElement(\"li\"), {\n        className: \"no-item-found\",\n        textContent: searxng.settings.translations?.no_item_found ?? \"No results found\"\n      });\n      autocompleteList.append(noItemFoundMessage);\n      return;\n    }\n\n    const fragment = new DocumentFragment();\n\n    for (const result of results[1]) {\n      const li = Object.assign(document.createElement(\"li\"), { textContent: result });\n\n      searxng.listen(\"mousedown\", li, () => {\n        qInput.value = result;\n\n        const form = document.querySelector<HTMLFormElement>(\"#search\");\n        form?.submit();\n\n        autocomplete.classList.remove(\"open\");\n      });\n\n      fragment.append(li);\n    }\n\n    autocompleteList.append(fragment);\n  } catch (error) {\n    console.error(\"Error fetching autocomplete results:\", error);\n  }\n};\n\nsearxng.ready(\n  () => {\n    const qInput = document.getElementById(\"q\") as HTMLInputElement | null;\n    assertElement(qInput);\n\n    const isMobile = window.matchMedia(\"(max-width: 50em)\").matches;\n    const isResultsPage = document.querySelector(\"main\")?.id === \"main_results\";\n\n    // focus search input on large screens\n    if (!isMobile && !isResultsPage) {\n      qInput.focus();\n    }\n\n    createClearButton(qInput);\n\n    // autocompleter\n    if (searxng.settings.autocomplete) {\n      let timeoutId: number;\n\n      searxng.listen(\"input\", qInput, () => {\n        clearTimeout(timeoutId);\n\n        const query = qInput.value;\n        const minLength = searxng.settings.autocomplete_min ?? 2;\n\n        if (query.length < minLength) return;\n\n        timeoutId = window.setTimeout(async () => {\n          if (query === qInput.value) {\n            await fetchResults(qInput, query);\n          }\n        }, 300);\n      });\n\n      const autocomplete = document.querySelector<HTMLElement>(\".autocomplete\");\n      const autocompleteList = document.querySelector<HTMLUListElement>(\".autocomplete ul\");\n      if (autocompleteList) {\n        searxng.listen(\"keyup\", qInput, (event: KeyboardEvent) => {\n          const listItems = [...autocompleteList.children] as HTMLElement[];\n\n          const currentIndex = listItems.findIndex((item) => item.classList.contains(\"active\"));\n          let newCurrentIndex = -1;\n\n          switch (event.key) {\n            case \"ArrowUp\": {\n              const currentItem = listItems[currentIndex];\n              if (currentItem && currentIndex >= 0) {\n                currentItem.classList.remove(\"active\");\n              }\n              // we need to add listItems.length to the index calculation here because the JavaScript modulos\n              // operator doesn't work with negative numbers\n              newCurrentIndex = (currentIndex - 1 + listItems.length) % listItems.length;\n              break;\n            }\n            case \"ArrowDown\": {\n              const currentItem = listItems[currentIndex];\n              if (currentItem && currentIndex >= 0) {\n                currentItem.classList.remove(\"active\");\n              }\n              newCurrentIndex = (currentIndex + 1) % listItems.length;\n              break;\n            }\n            case \"Tab\":\n            case \"Enter\":\n              if (autocomplete) {\n                autocomplete.classList.remove(\"open\");\n              }\n              break;\n          }\n\n          if (newCurrentIndex !== -1) {\n            const selectedItem = listItems[newCurrentIndex];\n            if (selectedItem) {\n              selectedItem.classList.add(\"active\");\n\n              if (!selectedItem.classList.contains(\"no-item-found\")) {\n                const qInput = document.getElementById(\"q\") as HTMLInputElement | null;\n                if (qInput) {\n                  qInput.value = selectedItem.textContent ?? \"\";\n                }\n              }\n            }\n          }\n        });\n      }\n    }\n\n    // Additionally to searching when selecting a new category, we also\n    // automatically start a new search request when the user changes a search\n    // filter (safesearch, time range or language) (this requires JavaScript\n    // though)\n    if (\n      searxng.settings.search_on_category_select &&\n      // If .search_filters is undefined (invisible) we are on the homepage and\n      // hence don't have to set any listeners\n      document.querySelector(\".search_filters\")\n    ) {\n      const safesearchElement = document.getElementById(\"safesearch\");\n      if (safesearchElement) {\n        searxng.listen(\"change\", safesearchElement, () => submitIfQuery(qInput));\n      }\n\n      const timeRangeElement = document.getElementById(\"time_range\");\n      if (timeRangeElement) {\n        searxng.listen(\"change\", timeRangeElement, () => submitIfQuery(qInput));\n      }\n\n      const languageElement = document.getElementById(\"language\");\n      if (languageElement) {\n        searxng.listen(\"change\", languageElement, () => submitIfQuery(qInput));\n      }\n    }\n\n    const categoryButtons = [...document.querySelectorAll<HTMLButtonElement>(\"button.category_button\")];\n    for (const button of categoryButtons) {\n      searxng.listen(\"click\", button, (event: MouseEvent) => {\n        if (event.shiftKey) {\n          event.preventDefault();\n          button.classList.toggle(\"selected\");\n          return;\n        }\n\n        // deselect all other categories\n        for (const categoryButton of categoryButtons) {\n          categoryButton.classList.toggle(\"selected\", categoryButton === button);\n        }\n      });\n    }\n\n    const form = document.querySelector<HTMLFormElement>(\"#search\");\n    assertElement(form);\n\n    // override form submit action to update the actually selected categories\n    searxng.listen(\"submit\", form, (event: Event) => {\n      event.preventDefault();\n\n      const categoryValuesInput = document.querySelector<HTMLInputElement>(\"#selected-categories\");\n      if (categoryValuesInput) {\n        const categoryValues = categoryButtons\n          .filter((button) => button.classList.contains(\"selected\"))\n          .map((button) => button.name.replace(\"category_\", \"\"));\n\n        categoryValuesInput.value = categoryValues.join(\",\");\n      }\n\n      form.submit();\n    });\n  },\n  { on: [searxng.endpoint === \"index\" || searxng.endpoint === \"results\"] }\n);\n"],"file":"js/searxng.min.js"}